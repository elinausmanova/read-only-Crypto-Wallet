// @generated by protoc-gen-es v1.2.0
// @generated from file evmos/revenue/v1/revenue.proto (package evmos.revenue.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Revenue defines an instance that organizes fee distribution conditions for
 * the owner of a given smart contract
 *
 * @generated from message evmos.revenue.v1.Revenue
 */
export declare class Revenue extends Message<Revenue> {
  /**
   * contract_address is the hex address of a registered contract
   *
   * @generated from field: string contract_address = 1;
   */
  contractAddress: string;

  /**
   * deployer_address is the bech32 address of message sender. It must be the same as the origin EOA
   * sending the transaction which deploys the contract
   *
   * @generated from field: string deployer_address = 2;
   */
  deployerAddress: string;

  /**
   * withdrawer_address is the bech32 address of account receiving the transaction fees it defaults to
   * deployer_address
   *
   * @generated from field: string withdrawer_address = 3;
   */
  withdrawerAddress: string;

  constructor(data?: PartialMessage<Revenue>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "evmos.revenue.v1.Revenue";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Revenue;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Revenue;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Revenue;

  static equals(a: Revenue | PlainMessage<Revenue> | undefined, b: Revenue | PlainMessage<Revenue> | undefined): boolean;
}

