// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/circuit/v1/query.proto (package cosmos.circuit.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { GenesisAccountPermissions, Permissions } from "./types_pb.js";
import type { PageRequest, PageResponse } from "../../base/query/v1beta1/pagination_pb.js";

/**
 * QueryAccountRequest is the request type for the Query/Account RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryAccountRequest
 */
export declare class QueryAccountRequest extends Message<QueryAccountRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  constructor(data?: PartialMessage<QueryAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.circuit.v1.QueryAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAccountRequest;

  static equals(a: QueryAccountRequest | PlainMessage<QueryAccountRequest> | undefined, b: QueryAccountRequest | PlainMessage<QueryAccountRequest> | undefined): boolean;
}

/**
 * AccountResponse is the response type for the Query/Account RPC method.
 *
 * @generated from message cosmos.circuit.v1.AccountResponse
 */
export declare class AccountResponse extends Message<AccountResponse> {
  /**
   * @generated from field: cosmos.circuit.v1.Permissions permission = 1;
   */
  permission?: Permissions;

  constructor(data?: PartialMessage<AccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.circuit.v1.AccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountResponse;

  static equals(a: AccountResponse | PlainMessage<AccountResponse> | undefined, b: AccountResponse | PlainMessage<AccountResponse> | undefined): boolean;
}

/**
 * QueryAccountsRequest is the request type for the Query/Accounts RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryAccountsRequest
 */
export declare class QueryAccountsRequest extends Message<QueryAccountsRequest> {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryAccountsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.circuit.v1.QueryAccountsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAccountsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAccountsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAccountsRequest;

  static equals(a: QueryAccountsRequest | PlainMessage<QueryAccountsRequest> | undefined, b: QueryAccountsRequest | PlainMessage<QueryAccountsRequest> | undefined): boolean;
}

/**
 * AccountsResponse is the response type for the Query/Accounts RPC method.
 *
 * @generated from message cosmos.circuit.v1.AccountsResponse
 */
export declare class AccountsResponse extends Message<AccountsResponse> {
  /**
   * @generated from field: repeated cosmos.circuit.v1.GenesisAccountPermissions accounts = 1;
   */
  accounts: GenesisAccountPermissions[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<AccountsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.circuit.v1.AccountsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountsResponse;

  static equals(a: AccountsResponse | PlainMessage<AccountsResponse> | undefined, b: AccountsResponse | PlainMessage<AccountsResponse> | undefined): boolean;
}

/**
 * QueryDisableListRequest is the request type for the Query/DisabledList RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryDisabledListRequest
 */
export declare class QueryDisabledListRequest extends Message<QueryDisabledListRequest> {
  constructor(data?: PartialMessage<QueryDisabledListRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.circuit.v1.QueryDisabledListRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDisabledListRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDisabledListRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDisabledListRequest;

  static equals(a: QueryDisabledListRequest | PlainMessage<QueryDisabledListRequest> | undefined, b: QueryDisabledListRequest | PlainMessage<QueryDisabledListRequest> | undefined): boolean;
}

/**
 * DisabledListResponse is the response type for the Query/DisabledList RPC method.
 *
 * @generated from message cosmos.circuit.v1.DisabledListResponse
 */
export declare class DisabledListResponse extends Message<DisabledListResponse> {
  /**
   * @generated from field: repeated string disabled_list = 1;
   */
  disabledList: string[];

  constructor(data?: PartialMessage<DisabledListResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cosmos.circuit.v1.DisabledListResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisabledListResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisabledListResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisabledListResponse;

  static equals(a: DisabledListResponse | PlainMessage<DisabledListResponse> | undefined, b: DisabledListResponse | PlainMessage<DisabledListResponse> | undefined): boolean;
}

