// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/circuit/v1/query.proto (package cosmos.circuit.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { GenesisAccountPermissions, Permissions } from "./types_pb.js";
import { PageRequest, PageResponse } from "../../base/query/v1beta1/pagination_pb.js";

/**
 * QueryAccountRequest is the request type for the Query/Account RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryAccountRequest
 */
export const QueryAccountRequest = proto3.makeMessageType(
  "cosmos.circuit.v1.QueryAccountRequest",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * AccountResponse is the response type for the Query/Account RPC method.
 *
 * @generated from message cosmos.circuit.v1.AccountResponse
 */
export const AccountResponse = proto3.makeMessageType(
  "cosmos.circuit.v1.AccountResponse",
  () => [
    { no: 1, name: "permission", kind: "message", T: Permissions },
  ],
);

/**
 * QueryAccountsRequest is the request type for the Query/Accounts RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryAccountsRequest
 */
export const QueryAccountsRequest = proto3.makeMessageType(
  "cosmos.circuit.v1.QueryAccountsRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * AccountsResponse is the response type for the Query/Accounts RPC method.
 *
 * @generated from message cosmos.circuit.v1.AccountsResponse
 */
export const AccountsResponse = proto3.makeMessageType(
  "cosmos.circuit.v1.AccountsResponse",
  () => [
    { no: 1, name: "accounts", kind: "message", T: GenesisAccountPermissions, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryDisableListRequest is the request type for the Query/DisabledList RPC method.
 *
 * @generated from message cosmos.circuit.v1.QueryDisabledListRequest
 */
export const QueryDisabledListRequest = proto3.makeMessageType(
  "cosmos.circuit.v1.QueryDisabledListRequest",
  [],
);

/**
 * DisabledListResponse is the response type for the Query/DisabledList RPC method.
 *
 * @generated from message cosmos.circuit.v1.DisabledListResponse
 */
export const DisabledListResponse = proto3.makeMessageType(
  "cosmos.circuit.v1.DisabledListResponse",
  () => [
    { no: 1, name: "disabled_list", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

