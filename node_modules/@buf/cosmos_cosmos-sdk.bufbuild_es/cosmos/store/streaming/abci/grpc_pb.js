// @generated by protoc-gen-es v1.0.0 with parameter "rewrite_imports=./google/api/**/*_pb.js:@buf/googleapis_googleapis.bufbuild_es,rewrite_imports=./gogoproto/**/*_pb.js:@buf/cosmos_gogo-proto.bufbuild_es,rewrite_imports=./cosmos_proto/**/*_pb.js:@buf/cosmos_cosmos-proto.bufbuild_es"
// @generated from file cosmos/store/streaming/abci/grpc.proto (package cosmos.store.streaming.abci, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { RequestBeginBlock, RequestDeliverTx, RequestEndBlock, ResponseBeginBlock, ResponseCommit, ResponseDeliverTx, ResponseEndBlock } from "../../../../tendermint/abci/types_pb.js";
import { StoreKVPair } from "../../v1beta1/listening_pb.js";

/**
 * ListenBeginBlockRequest is the request type for the ListenBeginBlock RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenBeginBlockRequest
 */
export const ListenBeginBlockRequest = proto3.makeMessageType(
  "cosmos.store.streaming.abci.ListenBeginBlockRequest",
  () => [
    { no: 1, name: "req", kind: "message", T: RequestBeginBlock },
    { no: 2, name: "res", kind: "message", T: ResponseBeginBlock },
  ],
);

/**
 * ListenBeginBlockResponse is the response type for the ListenBeginBlock RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenBeginBlockResponse
 */
export const ListenBeginBlockResponse = proto3.makeMessageType(
  "cosmos.store.streaming.abci.ListenBeginBlockResponse",
  [],
);

/**
 * ListenEndBlockRequest is the request type for the ListenEndBlock RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenEndBlockRequest
 */
export const ListenEndBlockRequest = proto3.makeMessageType(
  "cosmos.store.streaming.abci.ListenEndBlockRequest",
  () => [
    { no: 1, name: "req", kind: "message", T: RequestEndBlock },
    { no: 2, name: "res", kind: "message", T: ResponseEndBlock },
  ],
);

/**
 * ListenEndBlockResponse is the response type for the ListenEndBlock RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenEndBlockResponse
 */
export const ListenEndBlockResponse = proto3.makeMessageType(
  "cosmos.store.streaming.abci.ListenEndBlockResponse",
  [],
);

/**
 * ListenDeliverTxRequest is the request type for the ListenDeliverTx RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenDeliverTxRequest
 */
export const ListenDeliverTxRequest = proto3.makeMessageType(
  "cosmos.store.streaming.abci.ListenDeliverTxRequest",
  () => [
    { no: 1, name: "block_height", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "req", kind: "message", T: RequestDeliverTx },
    { no: 3, name: "res", kind: "message", T: ResponseDeliverTx },
  ],
);

/**
 * ListenDeliverTxResponse is the response type for the ListenDeliverTx RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenDeliverTxResponse
 */
export const ListenDeliverTxResponse = proto3.makeMessageType(
  "cosmos.store.streaming.abci.ListenDeliverTxResponse",
  [],
);

/**
 * ListenCommitRequest is the request type for the ListenCommit RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenCommitRequest
 */
export const ListenCommitRequest = proto3.makeMessageType(
  "cosmos.store.streaming.abci.ListenCommitRequest",
  () => [
    { no: 1, name: "block_height", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "res", kind: "message", T: ResponseCommit },
    { no: 3, name: "change_set", kind: "message", T: StoreKVPair, repeated: true },
  ],
);

/**
 * ListenCommitResponse is the response type for the ListenCommit RPC method
 *
 * @generated from message cosmos.store.streaming.abci.ListenCommitResponse
 */
export const ListenCommitResponse = proto3.makeMessageType(
  "cosmos.store.streaming.abci.ListenCommitResponse",
  [],
);

