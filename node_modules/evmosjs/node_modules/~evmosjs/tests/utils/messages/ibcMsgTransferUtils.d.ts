import { TxContext } from '@evmos/transactions';
import { TestingClient } from '../utils';
declare class IBCMsgTransferTestingClient extends TestingClient {
    get params(): {
        sourcePort: string;
        sourceChannel: string;
        amount: string;
        denom: string;
        receiver: string;
        revisionNumber: number;
        revisionHeight: number;
        timeoutTimestamp: string;
        memo: string;
    };
    get protoMsg(): {
        message: import("@evmos/proto/dist/proto/cosmos-ibc/ibc/applications/tx").MsgTransfer;
        path: string;
    };
    get eip712TypedData(): {
        types: {
            MsgValue: {
                name: string;
                type: string;
            }[];
            TypeToken: {
                name: string;
                type: string;
            }[];
            TypeTimeoutHeight: {
                name: string;
                type: string;
            }[];
        };
        message: {
            type: string;
            value: {
                memo?: string | undefined;
                receiver: string;
                sender: string;
                source_channel: string;
                source_port: string;
                timeout_height: {
                    revision_height: string;
                    revision_number: string;
                };
                timeout_timestamp: string;
                token: {
                    amount: string;
                    denom: string;
                };
            };
        };
    };
    get payload(): {
        protoMsg: {
            message: import("@evmos/proto/dist/proto/cosmos-ibc/ibc/applications/tx").MsgTransfer;
            path: string;
        };
        eip712TypedData: {
            types: {
                MsgValue: {
                    name: string;
                    type: string;
                }[];
                TypeToken: {
                    name: string;
                    type: string;
                }[];
                TypeTimeoutHeight: {
                    name: string;
                    type: string;
                }[];
            };
            message: {
                type: string;
                value: {
                    memo?: string | undefined;
                    receiver: string;
                    sender: string;
                    source_channel: string;
                    source_port: string;
                    timeout_height: {
                        revision_height: string;
                        revision_number: string;
                    };
                    timeout_timestamp: string;
                    token: {
                        amount: string;
                        denom: string;
                    };
                };
            };
        };
        tx: import("@evmos/transactions").TxPayload;
    };
    generateTxWithoutMemo: (context: TxContext) => import("@evmos/transactions").TxPayload;
    generateTx: (context: TxContext) => import("@evmos/transactions").TxPayload;
}
declare const client: IBCMsgTransferTestingClient;
export default client;
//# sourceMappingURL=ibcMsgTransferUtils.d.ts.map