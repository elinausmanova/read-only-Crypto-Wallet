import { TxContext } from '@evmos/transactions'
import { TestingClient } from '../utils'

declare class MsgSendTestingClient extends TestingClient {
  get params(): {
    destinationAddress: string
    amount: string
    denom: string
  }

  get protoMsg(): {
    message: import('@evmos/proto/dist/proto/cosmos/bank/tx').MsgSend
    path: string
  }

  get eip712TypedData(): {
    types: {
      MsgValue: {
        name: string
        type: string
      }[]
      TypeAmount: {
        name: string
        type: string
      }[]
    }
    message: {
      type: string
      value: {
        amount: {
          amount: string
          denom: string
        }[]
        from_address: string
        to_address: string
      }
    }
  }

  get payload(): {
    protoMsg: {
      message: import('@evmos/proto/dist/proto/cosmos/bank/tx').MsgSend
      path: string
    }
    eip712TypedData: {
      types: {
        MsgValue: {
          name: string
          type: string
        }[]
        TypeAmount: {
          name: string
          type: string
        }[]
      }
      message: {
        type: string
        value: {
          amount: {
            amount: string
            denom: string
          }[]
          from_address: string
          to_address: string
        }
      }
    }
    tx: import('@evmos/transactions').TxPayload
  }

  generateTx: (context: TxContext) => import('@evmos/transactions').TxPayload
}
declare const client: MsgSendTestingClient
export default client
// # sourceMappingURL=msgSendUtils.d.ts.map
