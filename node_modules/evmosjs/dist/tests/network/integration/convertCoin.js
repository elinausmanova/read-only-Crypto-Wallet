import { createTxMsgSubmitProposal } from '@evmos/transactions'
import { createMsgRegisterCoin, Proto } from '@evmos/proto'
import { ibcDenom } from '../params'

class ConvertCoinIntegrationClient {
  constructor() {
    this.submitProposal = (context) => {
      const ibcDenomUnit = new Proto.Cosmos.Bank.Bank.DenomUnit({
        denom: ibcDenom,
        exponent: 0,
        aliases: ['ibctoken'],
      })
      const baseDenomUnit = new Proto.Cosmos.Bank.Bank.DenomUnit({
        denom: 'token',
        exponent: 6,
      })
      const metadata = new Proto.Cosmos.Bank.Bank.Metadata({
        description: 'Test token',
        denomUnits: [ibcDenomUnit, baseDenomUnit],
        base: ibcDenom,
        display: 'token',
        name: 'Test Token',
        symbol: 'token',
      })
      const msg = createMsgRegisterCoin(
        'Test Convert-Coin',
        'Convert-Coin Description',
        [metadata],
      )
      const params = {
        content: msg,
        denom: 'aevmos',
        amount: '100000000000',
        proposer: context.sender.accountAddress,
      }
      return createTxMsgSubmitProposal(context, params)
    }
  }
}
export default ConvertCoinIntegrationClient
// # sourceMappingURL=convertCoin.js.map
